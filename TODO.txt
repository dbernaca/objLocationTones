V24.07.0 (3/13 realized):
=========================
+ Implement installTask() to preserve settings after update from 24.05 and later
- Change settings panel by using more API methods to notify users about wrong input instead of just ignoring it
+ Flip settings panel sliders to lower with downarrow
- Either translate the addon to other languages by myself or introduce it to translation system
- Consider fixing checkboxes in settings panel staying in effect even after Cancel is chosen
+ Implement possibility of changing caret position reporting behaviour (no reporting, reporting only lines, reporting only rows, reporting lines and rows)
- Add laptop gestures per issue request
- Fix treating single line editables as multiline when trying to detect end of a document
- See about getting the font size and using it to improve caret tone positioning
- Try to improve caret reporting at the end of documents some more
: Delete and backspace consider as typing unless selection was removed
  (selection bit not implemented yet)
- Change the ancestor reporting request algorithm
- Implement requestable location report stretching for a caret position in text editables
  that is, enable users to hear the caret position in full pitch range regardless the actual caret position on the screen
  so that the relation of the caret position to the size of the editable is felt
  this may help those with less sensitive hearing to use the caret position reporting effectively
  (consider implementing this for all objects instead, i.e. allow per client reporting)

V24.06.3 (6/12 realized):
=========================
+ Switch from print() function to logHandler module for warnings
- Fix treating single line editables as multiline when trying to detect end of a document
- See about getting the font size and using it to improve caret tone positioning
- Try to improve caret reporting at the end of documents some more
: Delete and backspace consider as typing unless selection was removed
  (selection bit not implemented yet)
- Change the ancestor reporting request algorithm
- Implement requestable location report stretching for a caret position in text editables
  that is, enable users to hear the caret position in full pitch range regardless the actual caret position on the screen
  so that the relation of the caret position to the size of the editable is felt
  this may help those with less sensitive hearing to use the caret position reporting effectively
  (consider implementing this for all objects instead, i.e. allow per client reporting)
+ Implement translations and put all translatable messages into a separate module
+ Implement configuration saving
+ Implement settings panel
+ Update the add-on template to a new version
+ Consider backward compatibility (at least back to NVDA 2022.4
  * Considered!!! 2023.1 stays.

V24.05.0 (11/17 realized):
==========================
- Fix treating single line editables as multiline when trying to detect end of a document
- See about getting the font size and using it to improve caret tone positioning
- Try to improve caret reporting at the end of documents some more
: Delete and backspace consider as typing unless selection was removed
  (selection bit not implemented yet)
- Change the ancestor reporting request algorithm
- Implement requestable location report stretching for a caret position in text editables
  that is, enable users to hear the caret position in full pitch range regardless the actual caret position on the screen
  so that the relation of the caret position to the size of the editable is felt
  this may help those with less sensitive hearing to use the caret position reporting effectively
  (consider implementing this for all objects instead, i.e. allow per client reporting)
+ Fix "+" not being recognized as character
+ Fix caret location not reporting at the end of line on the document end
+ Use more: from scriptHandler explicit imports, instead of import scriptHandler
+ Update the README
+ See about using tree interceptors for caret position detection
+ Switch from module to package
+ Implement translations and put all translatable messages into a separate module
+ Implement configuration saving
+ Implement settings panel
+ Update the add-on template to a new version
+ Consider backward compatibility (at least back to NVDA 2022.4
  * Considered!!! 2023.1 stays.
